type AuthPayload {
  id: String!
  token: String!
  refreshtoken: String!
  user: User
  organizations: [User_Organization]
}
type User {
  uid: String
  account_type: String
  email: String
  oid: String
  profile:  User_Profile
  roles: Role
  settings: UserSettings
}

type User_Profile {
  firstName: String
  lastName: String
  name: String
  slug: String
  welcome: Welcome
  timezone: String
}

type User_Organization {
  oid: String!
  account_type: String
  default: Boolean
  roles: Role
}

type Welcome {
  connected: Boolean
  curated: Boolean
  searched: Boolean
  welcomed: Boolean
}

type Role {
  admin: Boolean
  freelancer: Boolean
  user: Boolean
}

type UserSettings {
  locale: String
  mobile: UserMobile
  notifications: UserNotification
  sms : SmsType
}

type UserMobile{
  onboarded: String
}

type UserNotification{
  push: PushType
}

type PushType{
  off: Boolean
}

type SmsType{
  phone_details: phoneDetails
  platform: String
  push: PushType
}

type phoneDetails{
 		countrycode: String
		formatedNumber: String
		intlprefix: String
		phonenumber: String
}



input User_input {
  uid: String
  account_type: String
  email: String
  oid: String
  profile: User_Profile_input
  roles: Role_input
}

input User_Profile_input {
  firstName: String
  lastName: String
  name: String
  slug: String
  welcome: Welcome_input
  timezone: String
}

input Welcome_input {
  connected: Boolean
  curated: Boolean
  searched: Boolean
  welcomed: Boolean
}

input Role_input {
  admin: Boolean
  freelancer: Boolean
  user: Boolean
}

type responseOnBoarded {
  isBoarded: Boolean
  error: ErrorType
}
type responsePayload {
  isSuccess: Boolean
  error: ErrorType
}
type ErrorType {
  code: String
  message: String
}

type refreshPayload {
  id: String!
  token: String!
  refreshtoken: String!
}
